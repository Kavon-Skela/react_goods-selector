{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","cancellationOfSelected","setState","selectionOfGood","_event","selected","this","className","type","onClick","map","good","isSelected","classNames","event","Math","random","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,uBAAyB,WACvB,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,gBAAkB,SAChBC,EACAC,GAEI,EAAKN,MAAMC,eAAiBK,GAC9B,EAAKH,SAAS,CAAEF,aAAc,KAG5B,EAAKD,MAAMC,eAAiBK,GAC9B,EAAKH,SAAS,CAAEF,aAAcK,KAlBpC,4CAsBE,WAA2B,IAAD,OAChBL,EAAiBM,KAAKP,MAAtBC,aAER,OACE,uBAAMO,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACGP,EAAY,UACNA,EADM,gBAET,oBAEHA,GAGC,wBACE,UAAQ,cACRQ,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKL,4BAKpB,uBAAOM,UAAU,QAAjB,SACE,gCACGV,EAAMa,KAAI,SAAAC,GACT,IAAMC,EAAaZ,IAAiBW,EAEpC,OACE,qBACE,UAAQ,OACRJ,UAAWM,IACT,CAAE,+BAAgCD,IAHtC,UAOE,6BACE,wBACE,UAASA,EACL,eACA,YACJJ,KAAK,SACLD,UAAWM,IACT,SACA,CAAE,UAAWD,IAEfH,QAAS,SAACK,GACR,EAAKX,gBAAgBW,EAAOH,IAVhC,SAaGC,EACG,IACA,QAIR,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACGI,MAvBEI,KAAKC,wBAvD5B,GAAyBC,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a0c028b2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  cancellationOfSelected = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  selectionOfGood = (\n    _event: React.MouseEvent<HTMLButtonElement>,\n    selected: string,\n  ): void => {\n    if (this.state.selectedGood === selected) {\n      this.setState({ selectedGood: '' });\n    }\n\n    if (this.state.selectedGood !== selected) {\n      this.setState({ selectedGood: selected });\n    }\n  };\n\n  render(): React.ReactNode {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {selectedGood\n            ? `${selectedGood} is selected`\n            : 'No goods selected'}\n\n          {selectedGood\n          && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.cancellationOfSelected}\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              const isSelected = selectedGood === good;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  className={classNames(\n                    { 'has-background-success-light': isSelected },\n                  )}\n                  key={Math.random()}\n                >\n                  <td>\n                    <button\n                      data-cy={isSelected\n                        ? 'RemoveButton'\n                        : 'AddButton'}\n                      type=\"button\"\n                      className={classNames(\n                        'button',\n                        { 'is-info': isSelected },\n                      )}\n                      onClick={(event) => {\n                        this.selectionOfGood(event, good);\n                      }}\n                    >\n                      {isSelected\n                        ? '-'\n                        : '+'}\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}